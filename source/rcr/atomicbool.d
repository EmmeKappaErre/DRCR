module rcr.atomicbool;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
struct AtomicBool
{
    import core.atomic;

public:
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	this(bool value)
	{
		atomicStore(m_value, value);
	}

	void opAssign(AtomicBool newValue)
	{
		atomicStore(m_value, cast(bool)newValue);
	}

    void opAssign(bool newValue)
    {
		atomicStore(m_value, newValue);
    }

    bool opCast(T)() const
    if( is( T==bool) ) 
	{ 
		return atomicLoad(m_value); 
	}

private:
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	shared bool	m_value;
}